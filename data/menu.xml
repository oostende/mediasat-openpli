<menu text="Main menu" title="Main menu">
	<id val="mainmenu"/>
<!-- the following types are allowed:
	<screen [module="mod"] [screen="classname"]>[arguments]</screen>
		executes Screen called "classname" from module "Screen.mod"
		if no module is given, Screen must be globally available.
		if no screen is given, module is used as screen class name.
		arguments must be comma seperated (will be fed to eval), and can
			use stuff from module
		(of course you must specify at least one of module, screen.)
	<setup id="id"/>
		opens a setup with specified id
	<code> .. code .. </code>
		"exec"s code
-->
		
		<menu level="0" text="Setup" flushConfigOnClose="1" entryID="setup_selection" >
			<id val="setup"/>
			<menu weight="7" level="0" text="Service searching" entryID="service_searching_selection">
				<id val="scan"/>
				<item text="Tuner configuration" entryID="tuner_setup"><screen module="Satconfig" screen="NimSelection"/></item>
				<item text="Automatic scan" entryID="auto_scan"><screen module="ScanSetup" screen="ScanSimple"/></item>
				<item text="Manual scan" entryID="manual_scan"><screen module="ScanSetup"/></item>
			</menu>
			<menu weight="5" level="0" text="System" entryID="system_selection">
				<id val="system"/>
				<item level="0" entryID="usage_setup"><setup id="usage"/></item>
				<item level="0" entryID="user_interface"><setup id="userinterface"/></item>
				<item level="0" entryID="epg_settings"><setup id="epgsettings"/></item>
				<item level="0" entryID="recording_setup"><setup id="recording"/></item>
				<item level="2" entryID="subtitle_setup"><setup id="subtitlesetup"/></item>
				<item level="1" entryID="autolanguage_setup"><setup id="autolanguagesetup"/></item>
				<item level="0" text="A/V settings" entryID="av_setup"><screen module="VideoMode" screen="VideoSetup" /></item>
				<item level="1" entryID="rfmod_setup" requires="RfModulator"><setup id="RFmod"/></item>
				<menu level="0" text="Harddisk" entryID="hardisk_selection" requires="Harddisk">
					<id val="harddisk"/>
					<item level="1" entryID="harddisk_setup"><setup id="harddisk"/></item>
					<item level="0" text="Initialization" entryID="harddisk_init"><screen module="HarddiskSetup" screen="HarddiskSelection"/></item>
					<item level="0" text="Filesystem check" entryID="harddisk_check"><screen module="HarddiskSetup" screen="HarddiskFsckSelection"/></item>
					<item level="0" text="Convert ext3 filesystem to ext4" entryID="harddisk_convert" requires="ext4"><screen module="HarddiskSetup" screen="HarddiskConvertExt4Selection"/></item>
				</menu>
				<item level="0" text="Network" entryID="network_setup"><screen module="NetworkSetup" screen="NetworkAdapterSelection"/></item>
				<item level="1" text="Input devices" entryID="input_device_setup"><screen module="InputDeviceSetup" screen="InputDeviceSelection"/></item>
				<item entryID="keyboard_setup" text="Keyboard"><setup id="keyboard"/></item>
				<item level="2" text="Recording paths" entryID="RecordPaths"><screen module="RecordPaths" screen="RecordPathsSettings"/></item>
				<item level="0" text="Language" entryID="language_setup"><screen module="LanguageSelection"/></item>
				<item level="0" text="Hotkey" entryID="hotkey_setup"><screen module="Hotkey" screen="HotkeySetup"/></item>
			</menu>
			<menu weight="10" text="SoftCam / CI" entryID="cam_setup">
				<id val="cam" />
			    <item weight="0" level="1" text="Basic settings" entryID="ci_setup"><screen module="Ci" screen="CISetup" /></item>
			    <item weight="1" level="1" text="Common Interface" entryID="ci_setup"><screen module="Ci" screen="CiSelection" /></item>
			    <item weight="5" level="1" text="CIHelper Setup" entryID="ci_setup" requires="CIHelper"><screen module="Ci" screen="CIHelper" /></item>
		    </menu>
			<item weight="15" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup"/></item>
			<item weight="15" level="0" text="Factory reset" entryID="factory_reset">
				<code>
from Screens.FactoryReset import FactoryReset
def msgClosed(ret):
	if ret:
		from os import system, _exit
		system("rm -R /etc/enigma2")
		_exit(0)
self.session.openWithCallback(msgClosed, FactoryReset)
</code>
			</item>
			<item weight="15" level="0" text="Software update" entryID="software_update"><screen module="SoftwareUpdate" screen="UpdatePlugin"/></item>
		</menu>
		<item level="0" text="mediaSat-ME App's" entryID="blackhole_extra"><screen module="MeSet" screen="MediaSatSettings" /></item>
		<item level="1" text="Plugins" entryID="plugin_selection"><screen module="PluginBrowser" screen="PluginBrowser"/></item>
		<menu level="0" weight="6" text="Mediasat Backup Menu" entryID="backup_screen">
			<id val="mebackup"/>
		</menu>
		<item level="0" text="Timer" entryID="timer_edit"><screen module="TimerEdit" screen="TimerEditList"/></item>
		<item level="1" text="VCR scart" entryID="scart_switch" configcondition="config.usage.show_vcr_scart" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>
		<menu level="0" text="Information" entryID="info_screen">
			<id val="information"/>
			<item level="1" text="Service" entryID="service_info_screen"><screen module="ServiceInfo" screen="ServiceInfo"/></item>
			<item level="0" text="About" entryID="about_screen"><screen module="About"/></item>
		</menu>
		<menu text="MediaSat-ME Shutdown" entryID="standby_restart_list">
			<id val="shutdown" />
			<!--<item text="Standby"><code>quitMainloop(0)</code></item>-->
			<item text="Shutdown" entryID="deep_standby"><screen module="Standby" screen="TryQuitMainloop">1</screen></item>
			<item text="Restart" entryID="restart"><screen module="Standby" screen="TryQuitMainloop">2</screen></item>
			<item text="Restart Gui" entryID="restart_enigma"><screen module="Standby" screen="TryQuitMainloop">3</screen></item>
			<item text="Standby" entryID="standby"><screen module="Standby" screen="Standby"/></item>
			<item text="Set Sleeptimer" entryID="setsleeptimer"><screen module="SleepTimerEdit" screen="SleepTimerEdit"/></item>
		</menu></menu>
